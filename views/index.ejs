<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Upload</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* Drag-and-drop box styling */
    .dropzone {
      border: 2px dashed #ced4da;
      border-radius: 8px;
      padding: 20px;
      text-align: center;
      cursor: pointer;
      background-color: #f8f9fa;
      transition: background-color 0.3s;
    }

    .dropzone.dragover {
      background-color: #e9ecef;
    }

    /* File progress bar */
    .progress-bar {
      background-color: #4caf50;
    }

    /* Loading animation */
    #loading {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 9999;
      background-color: rgba(255, 255, 255, 0.9);
      padding: 20px;
      border-radius: 10px;
      text-align: center;
    }
    #loading img {
      width: 50px;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <h1 class="text-center mb-4">Upload and Attach Files</h1>
    <div id="loading">
      <img src="/loading.gif" alt="Loading...">
      <p>Processing, please wait...</p>
    </div>

    <form id="uploadForm" action="/process-pdf" method="POST" enctype="multipart/form-data">
      <div id="dropzone" class="dropzone">
        <p>Click to upload or drag and drop</p>
        <p><small>Maximum file size: 50 MB</small></p>
        <input type="file" id="fileInput" name="file" style="display: none;" required>
      </div>
      <div id="fileList" class="mt-3"></div>
      <button type="submit" class="btn btn-primary mt-3">Attach Files</button>
      <button type="button" id="cancelButton" class="btn btn-secondary mt-3">Cancel</button>
    </form>
  </div>
  <footer class="bg-dark text-white text-center py-2 mt-5">
    <p class="mb-0">Â© 2024 Reserved by <a href="https://apitos.in" class="text-white text-decoration-underline">Apitos</a></p>
  </footer>

  <!-- Bootstrap JS Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    const dropzone = document.getElementById('dropzone');
    const fileInput = document.getElementById('fileInput');
    const fileList = document.getElementById('fileList');
    const uploadForm = document.getElementById('uploadForm');
    const loading = document.getElementById('loading');
    const cancelButton = document.getElementById('cancelButton');

    // Drag-and-drop events
    dropzone.addEventListener('click', () => fileInput.click());
    dropzone.addEventListener('dragover', (e) => {
      e.preventDefault();
      dropzone.classList.add('dragover');
    });
    dropzone.addEventListener('dragleave', () => dropzone.classList.remove('dragover'));
    dropzone.addEventListener('drop', (e) => {
      e.preventDefault();
      dropzone.classList.remove('dragover');
      if (e.dataTransfer.files.length) {
        fileInput.files = e.dataTransfer.files;
        updateFileList(fileInput.files);
      }
    });

    // Update file list when a file is selected
    fileInput.addEventListener('change', () => updateFileList(fileInput.files));

    function updateFileList(files) {
      fileList.innerHTML = '';
      Array.from(files).forEach((file, index) => {
        const progressBar = `
          <div class="d-flex align-items-center mb-2">
            <span>${file.name} (${Math.round(file.size / 1024)} KB)</span>
            <div class="progress ms-3 flex-grow-1">
              <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: ${index === 0 ? '100%' : '40%'};"></div>
            </div>
          </div>`;
        fileList.innerHTML += progressBar;
      });
    }

    // Show loading animation on form submit
    uploadForm.addEventListener('submit', () => {
      loading.style.display = 'block';
    });

    // Cancel button to reset the form
    cancelButton.addEventListener('click', () => {
      uploadForm.reset();
      fileList.innerHTML = '';
    });
  </script>
</body>
</html>
